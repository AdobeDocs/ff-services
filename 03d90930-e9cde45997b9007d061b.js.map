{"version":3,"file":"03d90930-e9cde45997b9007d061b.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/@adobe/gatsby-theme-aio/components/Hero/index.js"],"sourcesContent":["\r\n/*\r\n * Copyright 2020 Adobe. All rights reserved.\r\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License. You may obtain a copy\r\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under\r\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\n * OF ANY KIND, either express or implied. See the License for the specific language\r\n * governing permissions and limitations under the License.\r\n */\r\n\r\nimport React, { cloneElement, Children, useContext, useEffect } from \"react\";\r\nimport { withPrefix } from \"gatsby\";\r\nimport { css } from \"@emotion/react\";\r\nimport { AnchorButton } from \"@adobe/gatsby-theme-aio/src/components/AnchorButton\";\r\nimport \"@spectrum-css/typography\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getElementChild,\r\n  cloneChildren,\r\n  TABLET_SCREEN_WIDTH,\r\n  DESKTOP_SCREEN_WIDTH,\r\n  MOBILE_SCREEN_WIDTH,\r\n  DEFAULT_HOME,\r\n  findSelectedTopPage,\r\n  rootFixPages,\r\n  rootFix,\r\n  findSelectedTopPageMenu,\r\n} from \"@adobe/gatsby-theme-aio/src/utils\";\r\nimport Context from \"@adobe/gatsby-theme-aio/src/components/Context\";\r\nimport { Breadcrumbs } from \"@adobe/gatsby-theme-aio/src/components/Breadcrumbs\";\r\nimport classNames from \"classnames\";\r\n\r\nimport lottie from 'lottie-web';\r\n\r\nconst setImageLoading = (child) => {\r\n  if (child?.props?.mdxType === 'img') {\r\n    return cloneElement(child, {\r\n      loading: 'eager'\r\n    });\r\n  }\r\n\r\n  return child;\r\n};\r\n\r\nconst getAriaLabel = (label, heading = '') => {\r\n  const labelVal = label === 'Learn more' && heading !== '' ? `${label} about ${heading}` : `${label}`;\r\n  return labelVal;\r\n}\r\n\r\nconst HeroButtons = ({ buttons, styles = ['fill', 'outline'], variants = ['accent', 'secondary'], heading = '', className }) =>\r\n\r\n  buttons ? (\r\n    <div>\r\n      <div\r\n        className={className}\r\n        css={css`\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: var(--spectrum-global-dimension-size-200);\r\n        `}>\r\n        {Children.map(buttons.props.children, (item, i) => {\r\n          let style = styles[0];\r\n          let variant = variants[0];\r\n\r\n          if (i > 0) {\r\n            style = styles[1];\r\n            variant = variants[1];\r\n          }\r\n\r\n          const link = getElementChild(item);\r\n\r\n          return (\r\n            <div key={i}>\r\n              <AnchorButton aria-label={getAriaLabel(link.props.children, heading)} href={link.props.href} variant={variant} style={style}>\r\n                <span class=\"spectrum-Button-label\">{link.props.children}</span>\r\n              </AnchorButton>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n\r\nconst HeroImage = ({ image, styles }) =>\r\n  image\r\n    ? cloneElement(image, {\r\n      children: cloneChildren(image.props.children, setImageLoading),\r\n      css: css`\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          height: 100%;\r\n          width: 100%;\r\n          margin-top: 0;\r\n          ${styles}\r\n\r\n          .gatsby-resp-image-wrapper {\r\n            max-width: none !important;\r\n            width: 100% !important;\r\n            height: 100% !important;\r\n          }\r\n\r\n          .gatsby-resp-image-image {\r\n            object-fit: cover;\r\n          }\r\n        `\r\n    })\r\n    : null;\r\n\r\nconst HeroTexts = ({ texts, customLayout, isTextWhite = true }) => {\r\n  const textKeys = Object.keys(texts).filter((key) => key.startsWith('text'));\r\n  return textKeys.map((textKey) =>\r\n    cloneElement(texts[textKey], {\r\n      className: 'spectrum-Body spectrum-Body--sizeL',\r\n      css: css`\r\n        &.spectrum-Body--sizeL {\r\n          margin-top: 0 !important;\r\n          ${isTextWhite === true &&\r\n        `\r\n            color: #fff!important;\r\n          `\r\n        }\r\n          &:last-of-type {\r\n            margin-bottom: 0 !important;\r\n          }\r\n        }\r\n\r\n        @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\r\n          padding: 0 var(--spectrum-global-dimension-size-115);\r\n        }\r\n      `\r\n    })\r\n  );\r\n};\r\n\r\nconst HeroHeading = ({ heading, variant, customLayout }) =>\r\n  heading\r\n    ? cloneElement(heading, {\r\n      // force h1 to support gdocs\r\n      mdxType: 'h1',\r\n      originalType: 'h1',\r\n      className:\r\n        (variant === 'default' || customLayout) ? customLayout ? 'spectrum-Heading--sizeXL spectrum-Heading--serif' : 'spectrum-Heading--sizeXL' : 'spectrum-Heading--sizeXXL spectrum-Heading--serif',\r\n      css: css`\r\n          margin-top: 0;\r\n          margin-bottom: var(--spectrum-global-dimension-size-200);\r\n\r\n          & + p {\r\n            margin-bottom: var(--spectrum-global-dimension-size-200);\r\n          }\r\n        `\r\n    })\r\n    : null;\r\n\r\nconst Hero = ({\r\n  className,\r\n  background,\r\n  theme = 'dark',\r\n  heading,\r\n  image,\r\n  icon,\r\n  buttons,\r\n  assetsImg,\r\n  variant = 'default',\r\n  containerHeight = 1000,\r\n  width = DESKTOP_SCREEN_WIDTH,\r\n  customLayout = false,\r\n  primaryOutline = false,\r\n  isPrimaryBtn = false,\r\n  variantsTypePrimary = 'accent',\r\n  variantsTypeSecondary = 'secondary',\r\n  animationVideo = \"\",\r\n  videoUrl,\r\n  ...props\r\n}) => {\r\n  const { siteMetadata, location } = useContext(Context);\r\n\r\n\r\n  useEffect(() => {\r\n    if (animationVideo) {\r\n      var anim = lottie.loadAnimation({\r\n        container: document.querySelector(\"#svgContainer\"),\r\n        renderer: \"svg\",\r\n        loop: false,\r\n        autoplay: true,\r\n        animationData: animationVideo\r\n      });\r\n\r\n      anim.addEventListener(\"enterFrame\", function (animation) {\r\n        if (animation.currentTime > (anim.totalFrames - 25)) {\r\n          anim.pause();\r\n        }\r\n      });\r\n    }\r\n  }, [])\r\n\r\n\r\n  if (!variant || variant === 'default') {\r\n    const { home, pages } = siteMetadata;\r\n    const pathWithRootFix = rootFix(location.pathname);\r\n    const pagesWithRootFix = rootFixPages(pages);\r\n    const selectedTopPage = findSelectedTopPage(pathWithRootFix, pagesWithRootFix);\r\n    const selectedTopPageMenu = findSelectedTopPageMenu(pathWithRootFix, selectedTopPage);\r\n\r\n    return (\r\n      <section\r\n        className={classNames(className, `spectrum--${theme}`)}\r\n        css={css`\r\n          position: relative;\r\n          height: var(--spectrum-global-dimension-size-3400);\r\n          margin-bottom: var(--spectrum-global-dimension-size-400);\r\n          background-color: ${background ?? 'rgb( 29, 125, 238)'};\r\n          width: 100%;\r\n          display: flex;\r\n\r\n          @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\r\n            overflow: auto;\r\n          }\r\n\r\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\r\n            height: calc(100vh - var(--spectrum-global-dimension-size-1200));\r\n          }\r\n        `}>\r\n        {videoUrl && image ? <div css={css`\r\n              display : flex;\r\n              justify-content:center;\r\n              `}>\r\n          <HeroImage image={image} />\r\n          <video loop=\"true\" muted=\"true\" autoPlay preload=\"metadata\" playsInline css={css`\r\n                      display: inline;\r\n                      position: absolute;\r\n                      width: 30%;\r\n                      height:100%;\r\n                      box-sizing: border-box;\r\n                      padding: var(--spectrum-global-dimension-size-200);\r\n                  \r\n                      @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n                        display: block;\r\n                        width: 100%;\r\n                      }\r\n                      }\r\n                    `}>\r\n            <source src={videoUrl} type=\"video/mp4\" />\r\n          </video>\r\n        </div>\r\n          :\r\n          image ? <HeroImage image={image} styles={`position: absolute;`} /> : videoUrl &&\r\n            <video loop=\"true\" muted=\"true\" autoPlay preload=\"metadata\" playsInline css={css`\r\n                  display: inline;\r\n                  width: 90%;\r\n                  height:100%;\r\n                  box-sizing: border-box;\r\n                  padding: var(--spectrum-global-dimension-size-200);\r\n              \r\n                  @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n                    display: block;\r\n                    width: 100%;\r\n                  }\r\n                  }\r\n                `}>\r\n              <source src={videoUrl} type=\"video/mp4\" />\r\n            </video>\r\n        }\r\n\r\n        <div\r\n          css={css`\r\n            margin: auto;\r\n            display: flex;\r\n            position: relative;\r\n            height: 100%;\r\n            max-width: ${width};\r\n            flex-direction: row;\r\n            width: 100%;\r\n            align-items: center;\r\n\r\n            & > p {\r\n              margin-top: 0 !important;\r\n            }\r\n          `}>\r\n          <div\r\n            css={css`\r\n              width: calc(5 * 100% / 12);\r\n              position: absolute;\r\n              display: flex;\r\n              flex-direction: column;\r\n\r\n              & > p {\r\n                margin-top: var(--spectrum-global-dimension-size-225) !important;\r\n                margin-bottom: 0 !important;\r\n              }\r\n\r\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\r\n                width: auto;\r\n                padding: 0 var(--spectrum-global-dimension-size-400);\r\n              }\r\n            `}>\r\n            {home?.hidden !== true && home?.title && home?.href && selectedTopPage && (\r\n              <Breadcrumbs\r\n                pages={[\r\n                  DEFAULT_HOME,\r\n                  home,\r\n                  { ...selectedTopPage, href: withPrefix(selectedTopPage.href) },\r\n                  selectedTopPageMenu && { ...selectedTopPageMenu, href: withPrefix(selectedTopPageMenu.href) }\r\n                ]}\r\n              />\r\n            )}\r\n\r\n            <HeroHeading heading={heading} variant={variant} />\r\n\r\n            <HeroTexts texts={props} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  } else {\r\n    const height = 'calc(var(--spectrum-global-dimension-size-6000) + var(--spectrum-global-dimension-size-1800))';\r\n    if (variant === 'fullwidth' && customLayout) {\r\n      return (\r\n        <section\r\n          className={classNames(className, `spectrum--${theme}`)}\r\n          css={css`\r\n            width: 100%;\r\n            background: ${background ?? \"var(--spectrum-global-color-gray-50)\"};\r\n\r\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n              overflow: auto;\r\n            }\r\n\r\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\r\n              .spectrum-Heading--sizeXL {\r\n                font-size: var(--spectrum-alias-heading-l-text-size);\r\n              }\r\n            }\r\n          `}\r\n        >\r\n          {videoUrl && image ? <div css={css`\r\n              display : flex;\r\n              justify-content:center;\r\n              `}>\r\n            <HeroImage image={image} />\r\n            <video loop=\"true\" muted=\"true\" autoPlay preload=\"metadata\" playsInline css={css`\r\n                      display: inline;\r\n                      position: absolute;\r\n                      width: 30%;\r\n                      height:100%;\r\n                      box-sizing: border-box;\r\n                      padding: var(--spectrum-global-dimension-size-200);\r\n                  \r\n                      @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n                        display: block;\r\n                        width: 100%;\r\n                      }\r\n                      }\r\n                    `}>\r\n              <source src={videoUrl} type=\"video/mp4\" />\r\n            </video>\r\n          </div>\r\n            :\r\n            image ? <HeroImage image={image} /> : videoUrl &&\r\n              <video loop=\"true\" muted=\"true\" autoPlay preload=\"metadata\" playsInline css={css`\r\n                  display: inline;\r\n                  width: 90%;\r\n                  height:100%;\r\n                  box-sizing: border-box;\r\n                  padding: var(--spectrum-global-dimension-size-200);\r\n              \r\n                  @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n                    display: block;\r\n                    width: 100%;\r\n                  }\r\n                  }\r\n                `}>\r\n                <source src={videoUrl} type=\"video/mp4\" />\r\n              </video>\r\n          }\r\n\r\n\r\n          <div\r\n            css={css`\r\n              height: 100%;\r\n              top: 0;\r\n              bottom: 0;\r\n              width: 100%;\r\n              box-sizing: border-box;\r\n              padding: 0;\r\n              display: flex;\r\n              flex-direction: column;\r\n              align-items: center;\r\n              justify-content: flex-end;\r\n              text-align: center;\r\n\r\n              h1 {\r\n                padding: var(--spectrum-global-dimension-size-500) var(--spectrum-global-dimension-size-300) var(--spectrum-global-dimension-size-0) !important;\r\n              }\r\n\r\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\r\n                padding: 0 !important;\r\n              }\r\n\r\n              @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n                padding: 0 var(--spectrum-global-dimension-size-250);\r\n\r\n                h1 {\r\n                  padding: var(--spectrum-global-dimension-size-400) var(--spectrum-global-dimension-size-200) var(--spectrum-global-dimension-size-0) !important;\r\n                }\r\n              }\r\n            `}\r\n          >\r\n            {heading && (\r\n              <HeroHeading\r\n                heading={heading}\r\n                variant={variant}\r\n                customLayout={customLayout}\r\n              />\r\n            )}\r\n\r\n            <HeroTexts texts={props} />\r\n\r\n            {buttons ? (\r\n              <HeroButtons\r\n                buttons={buttons}\r\n                styles={['fill', 'outline']}\r\n                variants={[variantsTypePrimary, variantsTypeSecondary]}\r\n                css={css`\r\n                  margin-top: var(--spectrum-global-dimension-size-200);\r\n                  margin-bottom: var(--spectrum-global-dimension-size-200);\r\n                `}\r\n              />\r\n            ) : (\r\n              <div\r\n                css={css`\r\n                  margin-top: var(--spectrum-global-dimension-size-200);\r\n                `}\r\n              />\r\n            )}\r\n            <div className={assetsImg?.props?.children} />\r\n          </div>\r\n        </section>\r\n      )\r\n    } else if (variant === 'video' && animationVideo) {\r\n      return (\r\n        <section\r\n          className={classNames(className, `spectrum--${theme}`)}\r\n          css={css`\r\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\r\n            width: 100%;\r\n            overflow: hidden;\r\n            height: auto;\r\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n              height: auto;\r\n              padding: var(--spectrum-global-dimension-size-400);\r\n              box-sizing: border-box;\r\n            }\r\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\r\n              height: auto;\r\n              padding: var(--spectrum-global-dimension-size-400);\r\n              box-sizing: border-box;\r\n            }\r\n          `}>\r\n          <div css={css`\r\n              @media screen and (min-width: ${DESKTOP_SCREEN_WIDTH}) {\r\n                position: relative;\r\n                max-width:${DESKTOP_SCREEN_WIDTH}\r\n                margin:auto;\r\n              }\r\n            `}>\r\n            <div css={css`\r\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n                  display: none;\r\n                }\r\n              `}>\r\n              <div id=\"svgContainer\"></div>\r\n            </div>\r\n\r\n            <div\r\n              css={css`\r\n                  display: flex;\r\n                  height: 100%;\r\n                  max-width: ${width};\r\n                  margin: auto;\r\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\r\n                    display: inline;\r\n                  }\r\n              `}>\r\n              <div\r\n                css={css`\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    justify-content: center !important;\r\n                    position: absolute;\r\n                    padding: 0;\r\n                    top: 0;\r\n                    text-align: left;\r\n                    width: 30%;\r\n                    align-item:center;\r\n                    bottom: 0;\r\n                    box-sizing: border-box;\r\n\r\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\r\n                      padding: 0 !important;\r\n                      width: 100% !important;\r\n                      position: initial !important;\r\n                    }\r\n\r\n                    @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n                      padding: 0 var(--spectrum-global-dimension-size-100);\r\n                      width:100% !important;\r\n                      top: 20px !important;\r\n                      position: initial !important;\r\n                      h1 {\r\n                        padding: 0 var(--spectrum-global-dimension-size-200) 0 var(--spectrum-global-dimension-size-0) !important;\r\n                        font-size: var(--spectrum-heading-l-text-size, var(--spectrum-alias-heading-l-text-size))\r\n                      }\r\n                    }\r\n                `}>\r\n\r\n                {heading && (\r\n                  <HeroHeading\r\n                    heading={heading}\r\n                    variant={variant}\r\n                    customLayout={customLayout}\r\n                  />\r\n                )}\r\n\r\n                <HeroTexts texts={props} />\r\n\r\n                <HeroButtons\r\n                  buttons={buttons}\r\n                  styles={['outline']}\r\n                  variants={['staticWhite']}\r\n                  css={css`\r\n                      margin-top: var(--spectrum-global-dimension-size-400);\r\n                    `}\r\n                />\r\n              </div>\r\n              <div\r\n                css={css`\r\n                    max-width: ${width};\r\n                    margin: auto;\r\n                    display: none;\r\n                    @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n                      display: block;\r\n                    }\r\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\r\n                      display: inline;\r\n                    }\r\n                `}>\r\n                <div className={assetsImg?.props?.children} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      );\r\n    } else if (variant === 'halfwidth' && customLayout) {\r\n      return (\r\n        <section\r\n          className={classNames(className, `spectrum--${theme}`)}\r\n          css={css`\r\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\r\n            width: 100%;\r\n            overflow: hidden;\r\n            height: auto;\r\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n              height: auto;\r\n              padding: var(--spectrum-global-dimension-size-400);\r\n              box-sizing: border-box;\r\n            }\r\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\r\n              height: auto;\r\n              padding: var(--spectrum-global-dimension-size-225);\r\n              box-sizing: border-box;\r\n            }\r\n        `}>\r\n          <div css={css`\r\n            @media screen and (min-width: ${DESKTOP_SCREEN_WIDTH}) {\r\n              display: flex;\r\n              justify-content: space-between;\r\n              position: relative;\r\n              max-width:${DESKTOP_SCREEN_WIDTH};\r\n              margin:auto;\r\n            }\r\n          `}>\r\n            <div\r\n              css={css`\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: center !important;\r\n                // position: absolute;\r\n                padding: 0;\r\n                top: 0;\r\n                text-align: left;\r\n                width: 36%;\r\n                align-item:center;\r\n                bottom: 0;\r\n                box-sizing: border-box;\r\n\r\n                @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\r\n                  padding: 0 !important;\r\n                  width: 100% !important;\r\n                  position: initial !important;\r\n                }\r\n\r\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n                  padding: 0 var(--spectrum-global-dimension-size-100);\r\n                  width:100% !important;\r\n                  top: 20px !important;\r\n                  position: initial !important;\r\n                  h1 {\r\n                    padding: 0 var(--spectrum-global-dimension-size-200) 0 var(--spectrum-global-dimension-size-0) !important;\r\n                    font-size: var(--spectrum-heading-l-text-size, var(--spectrum-alias-heading-l-text-size))\r\n                  }\r\n                }\r\n            `}>\r\n              {icon &&\r\n                cloneElement(icon, {\r\n                  children: cloneChildren(icon.props.children, setImageLoading),\r\n                  css: css`\r\n                  height: var(--spectrum-global-dimension-size-400);\r\n                  width: var(--spectrum-global-dimension-size-3600);\r\n                  margin-top: 0 !important;\r\n                  margin-bottom: var(--spectrum-global-dimension-size-300) !important;\r\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\r\n                    width: var(--spectrum-global-dimension-size-3000) !important;\r\n                  }\r\n                  .gatsby-resp-image-wrapper {\r\n                    max-width: none !important;\r\n                    width: 100% !important;\r\n                    height: 100% !important;\r\n                  }\r\n\r\n                  .gatsby-resp-image-image {\r\n                    height: 100%;\r\n                    object-fit: contain;\r\n                  }\r\n                `\r\n                })}\r\n\r\n              {heading && (\r\n                <HeroHeading\r\n                  heading={heading}\r\n                  variant={variant}\r\n                  customLayout={customLayout}\r\n                />\r\n              )}\r\n\r\n              <HeroTexts texts={props} />\r\n\r\n              <HeroButtons\r\n                buttons={buttons}\r\n                css={css`\r\n                  margin-top: var(--spectrum-global-dimension-size-400);\r\n                `}\r\n                variants={[variantsTypePrimary, variantsTypeSecondary]}\r\n                style={[\"outine\"]}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className={assetsImg?.props?.children} />\r\n            </div>\r\n          </div>\r\n        </section>\r\n      );\r\n    } else if (variant === 'fullwidth') {\r\n      return (\r\n        <section\r\n          className={classNames(className, `spectrum--${theme}`)}\r\n          css={css`\r\n            position: relative;\r\n            width: 100%;\r\n            height: ${height};\r\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\r\n\r\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n              overflow: auto;\r\n            }\r\n\r\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\r\n              height: 100vh;\r\n\r\n              .spectrum-Heading--sizeXXL {\r\n                font-size: var(--spectrum-alias-heading-xl-text-size);\r\n              }\r\n            }\r\n          `}>\r\n          {videoUrl && image ? <div css={css`\r\n              display : flex;\r\n              justify-content:center;\r\n              `}>\r\n            <HeroImage image={image} />\r\n            <video loop=\"true\" muted=\"true\" autoPlay preload=\"metadata\" playsInline css={css`\r\n                      display: inline;\r\n                      position: absolute;\r\n                      width: 30%;\r\n                      height:100%;\r\n                      box-sizing: border-box;\r\n                      padding: var(--spectrum-global-dimension-size-200);\r\n                  \r\n                      @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n                        display: block;\r\n                        width: 100%;\r\n                      }\r\n                      }\r\n                    `}>\r\n              <source src={videoUrl} type=\"video/mp4\" />\r\n            </video>\r\n          </div>\r\n            :\r\n            image ? <HeroImage image={image} /> : videoUrl &&\r\n              <video loop=\"true\" muted=\"true\" autoPlay preload=\"metadata\" playsInline\r\n                css={css`\r\n                  display: inline;\r\n                  width: 100%;\r\n                  text-align:center;\r\n                  height:100%;\r\n                  box-sizing: border-box;\r\n                  padding: var(--spectrum-global-dimension-size-200);\r\n              \r\n                  @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n                    display: block;\r\n                    width: 100%;\r\n                  }\r\n                  }\r\n                `}>\r\n                <source src={videoUrl} type=\"video/mp4\" />\r\n              </video>\r\n          }\r\n\r\n          <div\r\n            css={css`\r\n              height: 100%;\r\n              position: absolute;\r\n              top: 0;\r\n              width: 100%;\r\n              box-sizing: border-box;\r\n              padding: 0 calc(var(--spectrum-global-dimension-size-3600) + var(--spectrum-global-dimension-size-125));\r\n              display: flex;\r\n              flex-direction: column;\r\n              align-items: center;\r\n              justify-content: center;\r\n              text-align: center;\r\n\r\n              @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n                padding: 0 var(--spectrum-global-dimension-size-400);\r\n              }\r\n            `}>\r\n            <HeroHeading heading={heading} variant={variant} />\r\n\r\n            <HeroTexts texts={props} />\r\n\r\n            <HeroButtons\r\n              buttons={buttons}\r\n              variants={['accent', 'secondary']}\r\n              css={css`\r\n                margin-top: var(--spectrum-global-dimension-size-400);\r\n              `}\r\n            />\r\n            <div className={assetsImg?.props?.children} />\r\n          </div>\r\n        </section>\r\n      );\r\n    } else if (variant === 'halfwidth') {\r\n      return (\r\n        <section\r\n          className={classNames(className, `spectrum--lightest`)}\r\n          css={css`\r\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\r\n            width: 100%;\r\n            height: ${height};\r\n            overflow: hidden;\r\n\r\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n              height: auto;\r\n              padding: var(--spectrum-global-dimension-size-400);\r\n              box-sizing: border-box;\r\n            }\r\n          `}>\r\n          <div\r\n            css={css`\r\n              display: flex;\r\n              height: 100%;\r\n              justify-content: center;\r\n            `}>\r\n            <div\r\n              css={css`\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: center;\r\n                width: calc(5 * 100% / 12);\r\n                margin-left: var(--spectrum-global-dimension-size-800);\r\n                margin-right: var(--spectrum-global-dimension-size-400);\r\n\r\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n                  width: 100%;\r\n                  margin: 0;\r\n                }\r\n              `}>\r\n              {icon &&\r\n                cloneElement(icon, {\r\n                  children: cloneChildren(icon.props.children, setImageLoading),\r\n                  css: css`\r\n                    height: var(--spectrum-global-dimension-size-600);\r\n                    width: var(--spectrum-global-dimension-size-600);\r\n                    margin-top: 0 !important;\r\n                    margin-bottom: var(--spectrum-global-dimension-size-300) !important;\r\n\r\n                    .gatsby-resp-image-wrapper {\r\n                      max-width: none !important;\r\n                      width: 100% !important;\r\n                      height: 100% !important;\r\n                    }\r\n\r\n                    .gatsby-resp-image-image {\r\n                      height: 100%;\r\n                      object-fit: contain;\r\n                    }\r\n                  `\r\n                })}\r\n\r\n              <HeroHeading heading={heading} isVariant />\r\n\r\n              <HeroTexts texts={props} isTextWhite={false} />\r\n\r\n              <HeroButtons\r\n                buttons={buttons}\r\n                css={css`\r\n                  margin-top: var(--spectrum-global-dimension-size-400);\r\n                `}\r\n              />\r\n            </div>\r\n            <div\r\n              css={css`\r\n                flex: 1;\r\n\r\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n                  display: none;\r\n                }\r\n              `}>\r\n\r\n              {videoUrl && image ? <div css={css`\r\n              display : flex;\r\n              justify-content:center;\r\n              `}>\r\n                <HeroImage image={image} />\r\n                <video loop=\"true\" muted=\"true\" autoPlay preload=\"metadata\" playsInline css={css`\r\n                      display: inline;\r\n                      position: absolute;\r\n                      width: 0%;\r\n                      height:100%;\r\n                      box-sizing: border-box;\r\n                      padding: var(--spectrum-global-dimension-size-200);\r\n                  \r\n                      @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n                        display: block;\r\n                        width: 100%;\r\n                      }\r\n                      }\r\n                    `}>\r\n                  <source src={videoUrl} type=\"video/mp4\" />\r\n                </video>\r\n              </div>\r\n                :\r\n                image ? <HeroImage image={image} styles={`position: absolute;`} /> : videoUrl &&\r\n                  <video loop=\"true\" muted=\"true\" autoPlay preload=\"metadata\" playsInline css={css`\r\n                  display: inline;\r\n                  width: 90%;\r\n                  height:100%;\r\n                  box-sizing: border-box;\r\n                  padding: var(--spectrum-global-dimension-size-200);\r\n              \r\n                  @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\r\n                    display: block;\r\n                    width: 100%;\r\n                  }\r\n                  }\r\n                `}>\r\n                    <source src={videoUrl} type=\"video/mp4\" />\r\n                  </video>\r\n              }\r\n\r\n            </div>\r\n          </div>\r\n        </section>\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nHero.propTypes = {\r\n  background: PropTypes.string,\r\n  heading: PropTypes.element,\r\n  text: PropTypes.element,\r\n  image: PropTypes.element,\r\n  icon: PropTypes.element,\r\n  buttons: PropTypes.element,\r\n  variant: PropTypes.string,\r\n  width: PropTypes.string,\r\n  theme: PropTypes.string,\r\n  customLayout: PropTypes.bool,\r\n  assetsImg: PropTypes.element,\r\n  animationVideo: PropTypes.element,\r\n  videoUrl: PropTypes.element\r\n};\r\n\r\nHeroButtons.propTypes = {\r\n  buttons: PropTypes.element,\r\n  variants: PropTypes.array,\r\n  quiets: PropTypes.array\r\n};\r\n\r\nHeroImage.propTypes = {\r\n  image: PropTypes.element\r\n};\r\n\r\nexport { Hero, HeroImage, HeroButtons };\r\n"],"names":["setImageLoading","child","_child$props","props","mdxType","cloneElement","loading","getAriaLabel","label","heading","_ref14","name","styles","HeroButtons","_ref15","buttons","_ref15$styles","_ref15$variants","variants","_ref15$heading","className","___EmotionJSX","css","Children","children","item","i","style","variant","link","getElementChild","key","AnchorButton","href","class","HeroImage","_ref16","image","cloneChildren","HeroTexts","_ref17","texts","_ref17$isTextWhite","customLayout","isTextWhite","Object","keys","filter","startsWith","map","textKey","MOBILE_SCREEN_WIDTH","_ref13","HeroHeading","_ref18","originalType","_ref","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","Hero","_ref19","background","_ref19$theme","theme","icon","assetsImg","_ref19$variant","_ref19$width","containerHeight","width","DESKTOP_SCREEN_WIDTH","_ref19$customLayout","_ref19$variantsTypePr","primaryOutline","isPrimaryBtn","variantsTypePrimary","_ref19$variantsTypeSe","variantsTypeSecondary","_ref19$animationVideo","animationVideo","videoUrl","_objectWithoutPropertiesLoose","_excluded","_useContext","useContext","Context","siteMetadata","location","useEffect","anim","lottie","container","document","querySelector","renderer","loop","autoplay","animationData","addEventListener","animation","currentTime","totalFrames","pause","home","pages","pathWithRootFix","rootFix","pathname","pagesWithRootFix","rootFixPages","selectedTopPage","findSelectedTopPage","selectedTopPageMenu","findSelectedTopPageMenu","classNames","muted","autoPlay","preload","playsInline","TABLET_SCREEN_WIDTH","src","type","hidden","title","Breadcrumbs","DEFAULT_HOME","_objectSpread","withPrefix","_assetsImg$props","_assetsImg$props2","_assetsImg$props3","_assetsImg$props4","height","id","isVariant"],"sourceRoot":""}